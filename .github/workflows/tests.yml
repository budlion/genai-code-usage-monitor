name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        exclude:
          # Reduce CI load - only test 3.9 and 3.12 on Windows
          - os: windows-latest
            python-version: '3.10'
          - os: windows-latest
            python-version: '3.11'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short --cov=src/genai_code_usage_monitor --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Linting
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff black isort mypy
        pip install -e .

    - name: Run ruff
      run: ruff check src/ tests/
      continue-on-error: true

    - name: Run black
      run: black --check src/ tests/
      continue-on-error: true

    - name: Run isort
      run: isort --check-only src/ tests/
      continue-on-error: true

    - name: Run mypy
      run: mypy src/
      continue-on-error: true

  coverage:
    name: Coverage Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Generate coverage report
      run: |
        pytest tests/ --cov=src/genai_code_usage_monitor --cov-report=html --cov-report=term

    - name: Upload coverage HTML
      uses: actions/upload-artifact@v5
      with:
        name: coverage-report
        path: htmlcov/
        retention-days: 7

  docs:
    name: Documentation
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Check README
      run: |
        python -m pip install --upgrade pip
        pip install markdown
        python -c "import markdown; markdown.markdown(open('README.md').read())"

    - name: Validate pyproject.toml
      run: |
        pip install validate-pyproject
        validate-pyproject pyproject.toml
